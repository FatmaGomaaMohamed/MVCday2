// <auto-generated />
using System;
using MVCday2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCday2.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    partial class CompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCday2.Models.Department", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVCday2.Models.Dependent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SSN")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("SSN");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("MVCday2.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Bdate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupervisorSSN")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("SupervisorSSN");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVCday2.Models.Location", b =>
                {
                    b.Property<string>("location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("deptNumber")
                        .HasColumnType("int");

                    b.HasKey("location", "deptNumber");

                    b.HasIndex("deptNumber");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MVCday2.Models.Project", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MVCday2.Models.Works_On", b =>
                {
                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("proNumber")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "proNumber");

                    b.HasIndex("proNumber");

                    b.ToTable("Works_s");
                });

            modelBuilder.Entity("MVCday2.Models.Dependent", b =>
                {
                    b.HasOne("MVCday2.Models.Employee", "emp")
                        .WithMany("dependents")
                        .HasForeignKey("SSN");

                    b.Navigation("emp");
                });

            modelBuilder.Entity("MVCday2.Models.Employee", b =>
                {
                    b.HasOne("MVCday2.Models.Employee", "Supervisor")
                        .WithMany("employees")
                        .HasForeignKey("SupervisorSSN");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("MVCday2.Models.Location", b =>
                {
                    b.HasOne("MVCday2.Models.Department", "department")
                        .WithMany("locations")
                        .HasForeignKey("deptNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVCday2.Models.Project", b =>
                {
                    b.HasOne("MVCday2.Models.Department", "department")
                        .WithMany("projects")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVCday2.Models.Works_On", b =>
                {
                    b.HasOne("MVCday2.Models.Employee", "emp")
                        .WithMany("works_Ons")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCday2.Models.Project", "pro")
                        .WithMany("works_Ons")
                        .HasForeignKey("proNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emp");

                    b.Navigation("pro");
                });

            modelBuilder.Entity("MVCday2.Models.Department", b =>
                {
                    b.Navigation("locations");

                    b.Navigation("projects");
                });

            modelBuilder.Entity("MVCday2.Models.Employee", b =>
                {
                    b.Navigation("dependents");

                    b.Navigation("employees");

                    b.Navigation("works_Ons");
                });

            modelBuilder.Entity("MVCday2.Models.Project", b =>
                {
                    b.Navigation("works_Ons");
                });
#pragma warning restore 612, 618
        }
    }
}
